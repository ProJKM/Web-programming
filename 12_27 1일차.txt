HTML은 Hypertext Markup Language의 줄임말로서, 웹사이트를 만드는 가장 기초가 되는 마크업 언어(프로그래밍 언어 X)입니다.
(마크업 언어라 함은, 특별한 기호나 표기를 사용하여 글의 서식과 스타일을 정해주는 언어를 뜻합니다.)
 
HTML을 구성하는 기본 단위는 태그 입니다. <>
<br>  "break" 태그는 브라우저에서 새로운 줄을 만들도록 되어있습니다.
<h1> 어떤 문구가 웹페이지의 제목인지 </h1> 
<p> 어떤 텍스트 단락을 표현하고 싶을때 사용 </p>
(여는 태그와 텍스트 문구 그리고 닫는 태그를 이용하여 만든 것들을 하나의 element(엘레먼트 혹은 요소)라고 부릅니다.)

<html>: 브라우저에게 HTML 코드가 해당 태그 내부에 존재한다고 알려줍니다.
<head>: 주로 외부 소스를 참조해야할때 사용하곤 합니다.
<body>: 브라우저는 이 태그에 포함되어 있는 내용들을 화면에 보여주게 됩니다.

<img src="이미지 주소">
몇몇 HTML 태그는 속성을 이용하여 추가적인 정보나 명령을 받을 수 있게 되어있습니다. 이 정보들을 전달해주는 것이 바로 attribute(속성)입니다. 우리는 이미지 태그의 src 속성을 이용하여 이미지의 웹 주소를 변경할 수 있습니다.

<a href="https://www.vanillacoding.co">바닐라코딩 홈페이지</a>
<a> 태그에 포함된 모든 요소는 웹페이지에서 사용자가 클릭할 수 있도록 만들어집니다.
<a> 태그에는 href(Hypertext Reference)라고 부르는 속성을 줄 수 있고, 이 속성값은 어떤 웹페이지로 링크를 걸고 싶은지에 대한 정보를 추가하게 됩니다.
(href 값의 앞 부분에 특정 단어를 붙이게 되면 조금 더 특별한 기능들이 주어집니다. mailto:는 이메일을 보내는 프로그램으로 연결시켜 주고, tel:은 휴대폰 기기들이 전화를 걸도록 연결됩니다.)

<p id="toc">수업 목차</p>
<a href="#toc">수업 목차로 이동하는 링크</a>
같은 페이지에서 다른 위치로 이동하는 링크

index.html
상대경로란, 같은 파일 시스템 구조 상의 위치를 표현합니다.
https://google.com/index.html
절대경로란, 전체 인터넷을 기준으로 해당 자료의 위치를 표현합니다.

-----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------

CSS에는 두 가지 부분이 있습니다. 브라우저에게 무엇을 바꾸고 싶은지 명령을 내리는 부분, 그리고 브라우저에게 어떻게 바꾸고 싶은지 명령 내리는 부분
body { color: blue; }
body : 브라우저에게 무엇을 바꾸고 싶은지 명령하는 부분입니다.
color: blue; : 브라우저에게 어떻게 바꾸고 싶은지 명령하는 부분입니다



Selectors (선택자)

1. Type : HTML의 태그 종류(type)을 지정하여 요소들을 꾸밀 수 있습니다. 지정한 태그 종류에 해당하는 모든 요소들은 설정한 스타일이 적용됩니다.

CSS
h1 { color: blue;}

2. Class : 동일한 스타일을 여러 개의 요소에게 공통적으로 적용할 때 유용하게 사용되는 방법입니다.   

CSS
.thick { font-weight: bold; }
HTML
<span class="thick">I'm thick</span>

3. ID : 하나의 웹 페이지에서 하나의 ID 명은 반드시 하나의 요소에만 적용되어야 합니다. 여러 개의 HTML 요소들이 동일한 ID 값을 가질 수 없습니다.

CSS
#box { background: blue; }
HTML
<div id="box">I'm a box</div>

4. Compound : 여러 개의 Selector를 동시에 나열하는 방식입니다.

CSS
h1, h2, #box { font-family: Arial, Helvetica, sans-serif; }

5. Descendent : 이 선택 방식은 특정 요소의 하위 요소를 선택할 때 사용됩니다. 

CSS
#nav li { background: blue; }
HTML
<ul id="nav">
  <li>child</li>
</ul>

6. Child : 부등호 기호를 위와 같이 사용하여 직속 자식 요소들을 선택할 수도 있습니다. 직속 자식이 아닌 손자/손녀 요소 혹은 그 하위 요소들은 제외됩니다.

CSS
#list > li { border: 1px solid black; }

7. Universal : 위 선택자는 페이지의 모든 요소들을 선택하는 방법입니다.

CSS
* { color: orange; }

8. Attribute : 위 선택자는 img 태그들 중 alt 속성의 값이 "Cat"인 HTML 요소들을 선택하여 스타일을 적용합니다.

CSS
img[alt="Cat"] { border: 1px solid black; }
HTML
<img src="myimage.jpg" alt="Cat">


Block vs Inline Block

Block 요소들은 화면상에서 항상 새로운 줄에서 시작하고, 위 아래에 서로 쌓이는 형식으로 나타납니다. 그리고 사용 가능한 최대치의 폭을 차지하게 됩니다.
Inline 요소들은 새 줄에서 나타나지 않습니다. 일반적인 문서에서의 텍스트 흐름과 동일하게 동작합니다. 하나에 이어 또 다른 하나가 줄줄이 이어 붙어서 나타나는 형식입니다. 그리고 요소 내부 컨텐츠의 양만큼만 폭을 차지하게 됩니다. 

Positioning

가장 첫 번째 방법은 CSS의 flex 속성을 이용하는 것입니다. 
두 번째 방법은 display 속성에 해당하는 값 중 하나인 inline-block을 이용하는 방법입니다. 
가장 흔하게 많이 사용되는 것이 바로 position: relative; 그리고 position: absolute;입니다.


